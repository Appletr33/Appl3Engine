plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

project.ext.lwjglVersion = "3.2.3"
project.ext.jomlVersion = "1.10.0"
project.ext.jomlPrimVersion = "1.10.0"

// Determine the OS and set the LWJGL natives accordingly
def osName = System.getProperty("os.name").toLowerCase()
if (osName.contains("mac")) {
    project.ext.lwjglNatives = "natives-macos"
} else if (osName.contains("win")) {
    project.ext.lwjglNatives = "natives-windows"
} else if (osName.contains("nux")) {
    project.ext.lwjglNatives = "natives-linux"
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // LWJGL BOM
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    // JOML
    implementation "org.joml:joml:${jomlVersion}"
    implementation "org.joml:joml-primitives:${jomlPrimVersion}"

    // LWJGL Modules
    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-stb" // stb for image loading

    // LWJGL Natives
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives" // stb natives
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.example.Main' // Replace with your main class
        )
    }
}

shadowJar {
    archiveClassifier.set('all')
}

test {
    useJUnitPlatform()
}